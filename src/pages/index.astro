---
import Layout from "@layouts/BaseLayout.astro";
import Hero from "@components/Hero.astro";
import SectionHeading from "@components/SectionHeading.astro";
import Button from "@components/Button.astro";
import Icon from "@components/Icon.astro";

import { getCollection } from "astro:content";
import ProjectCard from "@components/ProjectCard.astro";
import DateChip from "../components/DateChip.astro";
import ProjectIcon from "../components/ProjectIcon.astro";
import { clsx } from "clsx";
import ExperienceCard from "../components/ExperienceCard.astro";

const featuredProjectSlugs = [
  "rashcam", "advertizers",
];

const featuredProjects = await getCollection("projects", ({ data, slug }) => {
  return (import.meta.env.PROD ? data.draft !== true : true) && featuredProjectSlugs.includes(slug);
});
featuredProjects.sort((a, b) => b.data.startDate - a.data.startDate);

const workExperience = (await getCollection("work")).sort((a, b) => b.data.startDate - a.data.startDate);
---

<Layout title="Home" description="A personal website showcasing the interest in world of software development">
  <Hero />
  <section id="projects" class="mx-auto container max-w-6xl flex flex-col gap-12 px-8 py-8 sm:px-12">
    <SectionHeading name="projects-heading">
      Projects
    </SectionHeading>
    <div class="grid sm:grid-cols-1 max-w-5xl w-full self-center mt-4 gap-4">
      {featuredProjects.map((project) => (
        <ProjectCard showTransition project={project} />
      ))}
    </div>
    <div class="flex justify-center flex-wrap-reverse gap-4 items-center">
      <Button variant="text" href="/projects">
        View all projects
        <Icon slot="end-icon" icon="code" />
      </Button>
    </div>
  </section>
  <section id="work" class="mx-auto container max-w-6xl flex flex-col gap-12 px-8 py-8 sm:px-12">
    <SectionHeading>
      Work
    </SectionHeading>
    <div class="max-w-5xl w-full self-center mt-4 gap-x-4 grid sm:grid-cols-[auto_auto_1fr] gap-y-2 sm:gap-y-0">
      {workExperience.map((work, i) => (
        <>
          <div class="sm:ml-auto sm:mt-6">
            <DateChip startDate={work.data.startDate} endDate={work.data.endDate} />
          </div>
          <div class={
            clsx(
              "hidden sm:block relative w-2 bg-gray-200 dark:bg-gray-700",
              i === 0 && "rounded-t-full",
              i === workExperience.length - 1 && "rounded-b-full",
            )
          }>
            <span class="absolute shadow-md bg-gray-500 top-6 -right-2 w-6 h-6 rounded-full" />
          </div>
          <ExperienceCard experience={work} />
        </>))}
    </div>
  </section>
</Layout>
