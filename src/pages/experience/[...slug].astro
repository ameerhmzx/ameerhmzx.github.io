---
import { getCollection, CollectionEntry } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import DateChip from "../../components/DateChip.astro";
import ProjectIcon from "../../components/ProjectIcon.astro";
import TechChip from "../../components/TechChip.astro";
import IconLink from "../../components/IconLink.astro";
import StickyHeader from "../../components/StickyHeader.astro";
import Icon from "../../components/Icon.astro";
import ProjectCard from "../../components/ProjectCard.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const workEntries = await getCollection("work");

  return workEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"work">;
}

// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
const slug = Astro.params.slug;
const data = entry.data;

const { icon, title, role, description, technologies, url, location } = data;

const projects = await getCollection("projects", (projectEntry) => {
  return projectEntry.data.position.slug === slug;
});
---

<BaseLayout title={title} description={description ?? `Showcase of my work at ${title}`}>
  <article
    class="relative prose prose-sm dark:prose-invert max-w-4xl mx-auto px-4 py-8 sm:px-12 sm:py-16 overflow-x-clip">
    <StickyHeader>
      <ProjectIcon icon={icon} transitionName={`experience-icon-${slug}`} />
      <div class="flex flex-col">
        <h2 transition:name={`experience-${slug}`} class="m-0">{title}</h2>
        <span class="text-xs opacity-60 m-0 -mt-0.5 font-mono">{role}</span>
      </div>
      <DateChip
        className="hidden sm:block ml-auto"
        startDate={data.startDate}
        endDate={data.endDate}
      />
    </StickyHeader>

    <div class="space-y-6">
      <p>{description}</p>

      <DateChip className="ml-auto sm:hidden" startDate={data.startDate} endDate={data.endDate} />

      <div class="flex flex-wrap items-center gap-2">
        {technologies && technologies.map((tech) => (
          <TechChip tech={tech} slug={slug} />
        ))}
      </div>

      <div class="text-sm">
        <span class="flex items-center gap-1">
          <Icon icon="pin" />
          {location}
        </span>
        {url &&
          <IconLink
            icon="browser"
            url={url}
            text="Website"
          />}
      </div>
    </div>

    <hr />

    <Content />

    {projects && projects.length > 0 &&
      <div class="flex flex-col">
        <h3>Projects</h3>
        {projects.map((project) => (
          <ProjectCard
            project={project}
          />
        ))}
      </div>}
  </article>
</BaseLayout>
